"""
THIS FILE IS AUTO-GENERATED BY `scraper.py`

DO NOT EDIT IT MANUALLY (unless you have good reason ;) )
"""

raw_tactics = [
    (0, "+"),
    (1, "=>"),
    (2, "[ … | … | … ]"),
    (3, "[> … | … | … ]"),
    (4, "abstract"),
    (5, "absurd"),
    (6, "apply"),
    (7, "apply"),
    (8, "assert"),
    (9, "assert_fails"),
    (10, "assert_succeeds"),
    (11, "assumption"),
    (12, "by"),
    (13, "case"),
    (14, "classical_left"),
    (15, "classical_right"),
    (16, "clear"),
    (17, "clear dependent"),
    (18, "clearbody"),
    (19, "congr"),
    (20, "constr_eq"),
    (21, "constr_eq_nounivs"),
    (22, "constr_eq_strict"),
    (23, "context"),
    (24, "contradict"),
    (25, "contradiction"),
    (26, "cut"),
    (27, "dependent generalize_eqs"),
    (28, "dependent generalize_eqs_vars"),
    (29, "do"),
    (30, "do"),
    (31, "done"),
    (32, "eapply"),
    (33, "eassert"),
    (34, "eassumption"),
    (35, "eenough"),
    (36, "eexact"),
    (37, "eintros"),
    (38, "elim"),
    (39, "enough"),
    (40, "epose"),
    (41, "epose proof"),
    (42, "eremember"),
    (43, "eset"),
    (44, "evar"),
    (45, "exact"),
    (46, "exact"),
    (47, "exact_no_check"),
    (48, "exactly_once"),
    (49, "exfalso"),
    (50, "fail"),
    (51, "finish_timing"),
    (52, "first"),
    (53, "first"),
    (54, "first last"),
    (55, "fresh"),
    (56, "fun"),
    (57, "generalize"),
    (58, "generalize dependent"),
    (59, "generalize_eqs"),
    (60, "generalize_eqs_vars"),
    (61, "generally have"),
    (62, "gfail"),
    (63, "guard"),
    (64, "has_evar"),
    (65, "have"),
    (66, "idtac"),
    (67, "if-then-else"),
    (68, "in"),
    (69, "instantiate"),
    (70, "intro"),
    (71, "intros"),
    (72, "intros until"),
    (73, "is_cofix"),
    (74, "is_const"),
    (75, "is_constructor"),
    (76, "is_evar"),
    (77, "is_fix"),
    (78, "is_ground"),
    (79, "is_ind"),
    (80, "is_proj"),
    (81, "is_var"),
    (82, "lapply"),
    (83, "last"),
    (84, "last first"),
    (85, "lazy_match!"),
    (86, "lazy_match! goal"),
    (87, "lazymatch"),
    (88, "lazymatch goal"),
    (89, "let"),
    (90, "ltac-seq"),
    (91, "match"),
    (92, "match"),
    (93, "match goal"),
    (94, "match!"),
    (95, "match! goal"),
    (96, "move"),
    (97, "move"),
    (98, "multi_match!"),
    (99, "multi_match! goal"),
    (100, "multimatch"),
    (101, "multimatch goal"),
    (102, "native_cast_no_check"),
    (103, "not_evar"),
    (104, "numgoals"),
    (105, "once"),
    (106, "only"),
    (107, "optimize_heap"),
    (108, "over"),
    (109, "pose"),
    (110, "pose"),
    (111, "pose proof"),
    (112, "progress"),
    (113, "rapply"),
    (114, "refine"),
    (115, "remember"),
    (116, "rename"),
    (117, "repeat"),
    (118, "reset ltac profile"),
    (119, "restart_timer"),
    (120, "revert"),
    (121, "revert dependent"),
    (122, "rewrite"),
    (123, "set"),
    (124, "set"),
    (125, "show ltac profile"),
    (126, "simple apply"),
    (127, "simple eapply"),
    (128, "solve"),
    (129, "specialize"),
    (130, "specialize_eqs"),
    (131, "start ltac profiling"),
    (132, "stop ltac profiling"),
    (133, "suff"),
    (134, "suffices"),
    (135, "time"),
    (136, "time_constr"),
    (137, "timeout"),
    (138, "try"),
    (139, "tryif"),
    (140, "type of"),
    (141, "type_term"),
    (142, "under"),
    (143, "unify"),
    (144, "unlock"),
    (145, "vm_cast_no_check"),
    (146, "without loss"),
    (147, "wlog"),
    (148, "||"),
    (149, "… : …"),
    (150, "… : …"),
]
